#include <iostream>
#include <string>
using namespace std;

class Node {
public:
    string name;
    Node* next;
    
    Node(const string& name) : name(name), next(nullptr) {}
};

class LinkedList {
private:
    Node* first;
    Node* last;
    int size;
    
public:
    LinkedList() : first(nullptr), last(nullptr), size(0) {}
    
    void add(const string& name) {
        Node* toAdd = new Node(name);
        
        if (first == nullptr) {
            first = last = toAdd;
        } else {
            last->next = toAdd;
            last = toAdd;
        }
        size++;
    }
    
    void remove(const string& name) {
        if (first->name == name) {
            Node* toDelete = first;
            first = first->next;
            
            if (first == nullptr) {
                last = nullptr; 
            }
            
            delete toDelete;
            size--;
            return;
        }

        Node* prev = first;
        while (prev->next != nullptr && prev->next->name != name) {
            prev = prev->next;
        }

        Node* toDelete = prev->next;
        prev->next = toDelete->next;
        
        if (toDelete == last) {
            last = prev;
        }
        
        delete toDelete;
        size--;
    }
    
    void display() {
        Node* current = first;
        while (current != nullptr) {
            cout << current->name;
            if (current->next != nullptr) {
                cout << "->";
            }
            current = current->next;
        }
        cout << "->NULL" << endl;
    }
};

int main() {
    LinkedList list;
    
    list.add("Adlin");
    list.add("Aliya");
    list.add("Fakri");
    list.remove("Adlin");
    list.remove("Aliya");
    list.display();
    
    return 0;
}
