#include <iostream>
#include <string>
using namespace std;
 

class Node {
	public:
    	string name;
        Node* pointer;
        
        Node(const string& name) : name(name), pointer(nullptr) {}
};

class LinkedList {
	private:
    	Node* first;
        Node* last;
        int size;
        
	public:
    	LinkedList() : first(nullptr), last(nullptr), size(0) {}
        
        void add(const string& name) {
        	Node* toAdd = new Node(name);
            
            if (first == nullptr) {
            	first = last = toAdd;
            } else {
            	last->pointer = toAdd;
                last = toAdd;
            }
            
            size++;
        }
        
        void remove(const string& name) {
        	if (first->name == name) {
            	Node* toDelete = first;
                first = first->pointer;
                if (first == nullptr) 
                	last = nullptr;
                delete toDelete;
                size--;
                return;
            }
            
            Node* current = first;
            while (current->pointer != nullptr && current->name != name) {
            	current = current->pointer;
            }
            
            if (current->pointer != nullptr) {
            	Node* toDelete = current->pointer;
                current->pointer = toDelete->pointer;
                if (toDelete == last)
                	last = current;
                delete toDelete;
                size--;
            }
        }
        
        void display () {
        	Node* current = first;
            while (current != nullptr) {
            	cout << current->name;
                
                if (current->pointer != nullptr) 
                	cout << "->";
                current = current->pointer;
            }
            
            cout << endl;
        }
};

int main() {
	LinkedList list;
    
    list.add("Adlin");
    list.add("Aliya");
    list.add("Fakri");
    list.remove("Adlin");
    list.display();
    
    return 0;
}
